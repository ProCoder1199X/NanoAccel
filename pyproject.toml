[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nanoaccel"
version = "0.1.0"
authors = [{ name = "Dheeraj Kumar", email = "dheeraj.kumar@example.com" }]
description = "CPU-optimized LLM inference library for low-end hardware"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
keywords = ["llm", "inference", "cpu", "optimization", "quantization", "speculative-decoding"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=2.0.0,<3.0.0",
    "transformers>=4.30.0,<5.0.0",
    "accelerate>=0.20.0,<1.0.0",
    "bitsandbytes>=0.41.0,<1.0.0",
    "psutil>=5.9.0,<6.0.0",
    "PyYAML>=6.0,<7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "isort>=5.12.0,<6.0.0",
    "pyupgrade>=3.9.0,<4.0.0",
    "codespell>=2.2.0,<3.0.0",
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
]

[project.scripts]
nanoaccel = "nanoaccel.cli:main"

[project.urls]
Homepage = "https://github.com/ProCoder1199X/NanoAccel"
Repository = "https://github.com/ProCoder1199X/NanoAccel.git"
Issues = "https://github.com/ProCoder1199X/NanoAccel/issues"
Documentation = "https://github.com/ProCoder1199X/NanoAccel#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["nanoaccel*"]

[tool.setuptools.package-data]
nanoaccel = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=nanoaccel",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv",
]